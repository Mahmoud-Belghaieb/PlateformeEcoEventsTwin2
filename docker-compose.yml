version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: plateformeecoevents_app
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=plateformeecoevents
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecoevents-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: plateformeecoevents_mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: plateformeecoevents
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - ecoevents-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: plateformeecoevents_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
    networks:
      - ecoevents-network

  # phpMyAdmin (for database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: plateformeecoevents_phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: laravel
      PMA_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: rootpassword
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecoevents-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ecoevents-network:
    driver: bridge