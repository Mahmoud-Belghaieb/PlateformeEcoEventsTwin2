<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Avis;
use App\Models\Commentaire;
use App\Models\User;
use App\Models\Event;
use App\Models\Registration;

class AvisCommentaireSeeder extends Seeder
{
    public function run()
    {
        $users = User::all();
        $events = Event::all();

        if ($users->count() === 0 || $events->count() === 0) {
            $this->command->info('Pas d\'utilisateurs ou d\'√©v√©nements trouv√©s. Cr√©ation de donn√©es de base...');
            
            // Cr√©er quelques utilisateurs si aucun n'existe
            if ($users->count() === 0) {
                $users = collect([
                    User::create([
                        'name' => 'Alice Martin',
                        'email' => 'alice@example.com',
                        'password' => bcrypt('password'),
                        'role' => 'participant',
                        'is_active' => true,
                    ]),
                    User::create([
                        'name' => 'Bob Dupont',
                        'email' => 'bob@example.com',
                        'password' => bcrypt('password'),
                        'role' => 'participant',
                        'is_active' => true,
                    ]),
                    User::create([
                        'name' => 'Claire Rousseau',
                        'email' => 'claire@example.com',
                        'password' => bcrypt('password'),
                        'role' => 'participant',
                        'is_active' => true,
                    ]),
                ]);
            }
        }

        // Cr√©er des inscriptions pour que les utilisateurs puissent donner des avis
        foreach ($events->take(3) as $event) {
            foreach ($users->take(3) as $user) {
                // Cr√©er une inscription approuv√©e
                Registration::updateOrCreate([
                    'user_id' => $user->id,
                    'event_id' => $event->id,
                ], [
                    'type' => 'participant',
                    'status' => 'approved',
                    'registered_at' => now()->subDays(rand(10, 30)),
                    'approved_at' => now()->subDays(rand(5, 25)),
                    'approved_by' => 1, // Admin
                ]);
            }
        }

        // Cr√©er des avis de test
        $avisTexts = [
            [
                'title' => '√âv√©nement fantastique !',
                'content' => 'J\'ai particip√© √† cet √©v√©nement √©co-responsable et j\'ai √©t√© absolument ravi ! L\'organisation √©tait parfaite, les intervenants tr√®s comp√©tents et l\'ambiance conviviale. J\'ai beaucoup appris sur les gestes √©cologiques au quotidien.',
                'rating' => 5
            ],
            [
                'title' => 'Tr√®s enrichissant',
                'content' => 'Une exp√©rience tr√®s positive. Les ateliers √©taient bien organis√©s et les informations partag√©es tr√®s utiles. Quelques petits points d\'am√©lioration possibles sur la logistique mais dans l\'ensemble, tr√®s satisfait.',
                'rating' => 4
            ],
            [
                'title' => 'Bonne initiative',
                'content' => 'Contenu int√©ressant et pertinent. L\'√©v√©nement m\'a permis de d√©couvrir de nouvelles pratiques √©cologiques. L\'√©quipe √©tait accueillante et disponible pour r√©pondre aux questions.',
                'rating' => 4
            ],
            [
                'title' => 'Correct mais peut mieux faire',
                'content' => 'L\'√©v√©nement √©tait correct dans l\'ensemble. Quelques aspects pourraient √™tre am√©lior√©s, notamment la dur√©e de certains ateliers qui √©taient un peu courts. Mais l\'id√©e g√©n√©rale est bonne.',
                'rating' => 3
            ],
            [
                'title' => 'Excellente sensibilisation',
                'content' => 'Parfait pour sensibiliser aux enjeux environnementaux ! Les activit√©s √©taient vari√©es et adapt√©es √† tous les √¢ges. Bravo pour cette belle initiative qui m√©rite d\'√™tre renouvel√©e.',
                'rating' => 5
            ],
            [
                'title' => 'D√©√ßu par l\'organisation',
                'content' => 'L\'id√©e de l\'√©v√©nement √©tait bonne mais l\'organisation laissait √† d√©sirer. Trop d\'attente entre les ateliers et manque de communication. Dommage car le contenu √©tait int√©ressant.',
                'rating' => 2
            ]
        ];

        $commentaireTexts = [
            'Merci pour ce retour positif ! Cela nous encourage √† continuer.',
            'Nous prenons note de vos remarques pour am√©liorer nos prochains √©v√©nements.',
            'Ravi que l\'√©v√©nement vous ait plu ! √Ä bient√¥t pour de nouvelles aventures √©co-responsables.',
            'Nous sommes d√©sol√©s que l\'organisation n\'ait pas √©t√© √† la hauteur. Nous travaillons √† nous am√©liorer.',
            'Merci d\'avoir particip√© ! Votre retour nous aide √† progresser.',
            'Excellent retour ! N\'h√©sitez pas √† partager votre exp√©rience autour de vous.',
            'Nous sommes ravis que vous ayez appr√©ci√© nos ateliers !',
            'Merci pour vos suggestions constructives.',
        ];

        $reponsesTexts = [
            'Tout √† fait d\'accord avec vous !',
            'Merci pour ce compl√©ment d\'information.',
            'J\'ai eu la m√™me exp√©rience, tr√®s enrichissant !',
            'Merci pour ce partage d\'exp√©rience.',
            'Excellente remarque !',
            'Je suis du m√™me avis.',
        ];

        foreach ($events->take(3) as $event) {
            // Cr√©er 2-4 avis par √©v√©nement
            $nombreAvis = rand(2, 4);
            $usersForEvent = $users->shuffle()->take($nombreAvis);
            
            foreach ($usersForEvent as $index => $user) {
                $avisData = $avisTexts[array_rand($avisTexts)];
                
                $avis = Avis::create([
                    'user_id' => $user->id,
                    'event_id' => $event->id,
                    'rating' => $avisData['rating'],
                    'title' => $avisData['title'],
                    'content' => $avisData['content'],
                    'is_approved' => rand(0, 1) == 1, // 50% de chance d'√™tre approuv√©
                    'approved_at' => rand(0, 1) == 1 ? now()->subDays(rand(1, 5)) : null,
                    'approved_by' => rand(0, 1) == 1 ? 1 : null, // Admin
                ]);

                // Cr√©er 1-3 commentaires par avis (60% de chance)
                if (rand(1, 10) <= 6) {
                    $nombreCommentaires = rand(1, 3);
                    $usersForComments = $users->where('id', '!=', $user->id)->shuffle()->take($nombreCommentaires);
                    
                    foreach ($usersForComments as $commentUser) {
                        $commentaire = Commentaire::create([
                            'user_id' => $commentUser->id,
                            'avis_id' => $avis->id,
                            'content' => $commentaireTexts[array_rand($commentaireTexts)],
                            'is_approved' => rand(0, 1) == 1, // 50% de chance d'√™tre approuv√©
                            'approved_at' => rand(0, 1) == 1 ? now()->subDays(rand(1, 3)) : null,
                            'approved_by' => rand(0, 1) == 1 ? 1 : null,
                        ]);

                        // Cr√©er une r√©ponse au commentaire (30% de chance)
                        if (rand(1, 10) <= 3) {
                            $replyUser = $users->where('id', '!=', $commentUser->id)->random();
                            Commentaire::create([
                                'user_id' => $replyUser->id,
                                'avis_id' => $avis->id,
                                'parent_id' => $commentaire->id,
                                'content' => $reponsesTexts[array_rand($reponsesTexts)],
                                'is_approved' => rand(0, 1) == 1,
                                'approved_at' => rand(0, 1) == 1 ? now()->subDays(rand(1, 2)) : null,
                                'approved_by' => rand(0, 1) == 1 ? 1 : null,
                            ]);
                        }
                    }
                }
            }
        }

        $this->command->info('‚úÖ Avis et commentaires cr√©√©s avec succ√®s !');
        $this->command->info('üìä Statistiques :');
        $this->command->info('   - Avis cr√©√©s : ' . Avis::count());
        $this->command->info('   - Avis approuv√©s : ' . Avis::where('is_approved', true)->count());
        $this->command->info('   - Commentaires cr√©√©s : ' . Commentaire::count());
        $this->command->info('   - Commentaires approuv√©s : ' . Commentaire::where('is_approved', true)->count());
    }
}
