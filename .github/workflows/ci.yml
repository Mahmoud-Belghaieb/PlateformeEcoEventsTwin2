name: Laravel CI

# When should this run?
on:
  push:
    branches: [ main, mahmoud ]  # Run when you push to main or mahmoud branch
  pull_request:
    branches: [ main ]  # Run when someone creates a pull request to main

jobs:
  test:
    name: Run Tests & Code Quality Checks
    runs-on: ubuntu-latest  # Use Ubuntu server to run our tests
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    # Step 1: Download your code
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Step 2: Setup PHP (the programming language Laravel uses)
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, pcov
        coverage: pcov
        tools: composer:v2
        
    # Step 3: Cache dependencies (saves time by not re-downloading everything)
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
          
    # Step 4: Install Laravel dependencies
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction
      
    # Step 5: Setup environment
    - name: Setup environment
      run: |
        cp .env.example .env
        php artisan key:generate
        
    # Step 6: Run database migrations
    - name: Run database migrations
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: php artisan migrate --force
      
    # Step 7: Run code style checks (makes sure your code looks nice)
    - name: Run code style checks
      run: ./vendor/bin/pint --test
      
    # Step 8: Run tests with coverage
    - name: Run tests with coverage
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: php artisan test --coverage --coverage-clover=coverage.xml
      
    # Step 9: Setup Java (required for SonarQube Scanner)
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # Step 10: Run SonarQube Scanner
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        
    # Step 11: SonarQube Quality Gate
    - name: SonarQube Quality Gate Check
      uses: sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}